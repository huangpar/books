{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Poller = exports.EVENTS = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst events_1 = require(\"events\");\nconst errors_1 = require(\"./errors\");\nconst serialport_bindings_1 = require(\"./serialport-bindings\");\nconst {\n  Poller: PollerBindings\n} = serialport_bindings_1.binding;\nconst logger = (0, debug_1.default)('serialport/bindings-cpp/poller');\nexports.EVENTS = {\n  UV_READABLE: 0b0001,\n  UV_WRITABLE: 0b0010,\n  UV_DISCONNECT: 0b0100\n};\nfunction handleEvent(error, eventFlag) {\n  if (error) {\n    logger('error', error);\n    this.emit('readable', error);\n    this.emit('writable', error);\n    this.emit('disconnect', error);\n    return;\n  }\n  if (eventFlag & exports.EVENTS.UV_READABLE) {\n    logger('received \"readable\"');\n    this.emit('readable', null);\n  }\n  if (eventFlag & exports.EVENTS.UV_WRITABLE) {\n    logger('received \"writable\"');\n    this.emit('writable', null);\n  }\n  if (eventFlag & exports.EVENTS.UV_DISCONNECT) {\n    logger('received \"disconnect\"');\n    this.emit('disconnect', null);\n  }\n}\n/**\n * Polls unix systems for readable or writable states of a file or serialport\n */\nclass Poller extends events_1.EventEmitter {\n  constructor(fd, FDPoller = PollerBindings) {\n    logger('Creating poller');\n    super();\n    this.poller = new FDPoller(fd, handleEvent.bind(this));\n  }\n  /**\n   * Wait for the next event to occur\n   * @param {string} event ('readable'|'writable'|'disconnect')\n   * @returns {Poller} returns itself\n   */\n  once(event, callback) {\n    switch (event) {\n      case 'readable':\n        this.poll(exports.EVENTS.UV_READABLE);\n        break;\n      case 'writable':\n        this.poll(exports.EVENTS.UV_WRITABLE);\n        break;\n      case 'disconnect':\n        this.poll(exports.EVENTS.UV_DISCONNECT);\n        break;\n    }\n    return super.once(event, callback);\n  }\n  /**\n   * Ask the bindings to listen for an event, it is recommend to use `.once()` for easy use\n   * @param {EVENTS} eventFlag polls for an event or group of events based upon a flag.\n   */\n  poll(eventFlag = 0) {\n    if (eventFlag & exports.EVENTS.UV_READABLE) {\n      logger('Polling for \"readable\"');\n    }\n    if (eventFlag & exports.EVENTS.UV_WRITABLE) {\n      logger('Polling for \"writable\"');\n    }\n    if (eventFlag & exports.EVENTS.UV_DISCONNECT) {\n      logger('Polling for \"disconnect\"');\n    }\n    this.poller.poll(eventFlag);\n  }\n  /**\n   * Stop listening for events and cancel all outstanding listening with an error\n   */\n  stop() {\n    logger('Stopping poller');\n    this.poller.stop();\n    this.emitCanceled();\n  }\n  destroy() {\n    logger('Destroying poller');\n    this.poller.destroy();\n    this.emitCanceled();\n  }\n  emitCanceled() {\n    const err = new errors_1.BindingsError('Canceled', {\n      canceled: true\n    });\n    this.emit('readable', err);\n    this.emit('writable', err);\n    this.emit('disconnect', err);\n  }\n}\nexports.Poller = Poller;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Poller","EVENTS","debug_1","require","events_1","errors_1","serialport_bindings_1","PollerBindings","binding","logger","default","UV_READABLE","UV_WRITABLE","UV_DISCONNECT","handleEvent","error","eventFlag","emit","EventEmitter","constructor","fd","FDPoller","poller","bind","once","event","callback","poll","stop","emitCanceled","destroy","err","BindingsError","canceled"],"sources":["/Users/parkerhuang/Desktop/projects/books/node_modules/@serialport/bindings-cpp/dist/poller.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Poller = exports.EVENTS = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst events_1 = require(\"events\");\nconst errors_1 = require(\"./errors\");\nconst serialport_bindings_1 = require(\"./serialport-bindings\");\nconst { Poller: PollerBindings } = serialport_bindings_1.binding;\nconst logger = (0, debug_1.default)('serialport/bindings-cpp/poller');\nexports.EVENTS = {\n    UV_READABLE: 0b0001,\n    UV_WRITABLE: 0b0010,\n    UV_DISCONNECT: 0b0100,\n};\nfunction handleEvent(error, eventFlag) {\n    if (error) {\n        logger('error', error);\n        this.emit('readable', error);\n        this.emit('writable', error);\n        this.emit('disconnect', error);\n        return;\n    }\n    if (eventFlag & exports.EVENTS.UV_READABLE) {\n        logger('received \"readable\"');\n        this.emit('readable', null);\n    }\n    if (eventFlag & exports.EVENTS.UV_WRITABLE) {\n        logger('received \"writable\"');\n        this.emit('writable', null);\n    }\n    if (eventFlag & exports.EVENTS.UV_DISCONNECT) {\n        logger('received \"disconnect\"');\n        this.emit('disconnect', null);\n    }\n}\n/**\n * Polls unix systems for readable or writable states of a file or serialport\n */\nclass Poller extends events_1.EventEmitter {\n    constructor(fd, FDPoller = PollerBindings) {\n        logger('Creating poller');\n        super();\n        this.poller = new FDPoller(fd, handleEvent.bind(this));\n    }\n    /**\n     * Wait for the next event to occur\n     * @param {string} event ('readable'|'writable'|'disconnect')\n     * @returns {Poller} returns itself\n     */\n    once(event, callback) {\n        switch (event) {\n            case 'readable':\n                this.poll(exports.EVENTS.UV_READABLE);\n                break;\n            case 'writable':\n                this.poll(exports.EVENTS.UV_WRITABLE);\n                break;\n            case 'disconnect':\n                this.poll(exports.EVENTS.UV_DISCONNECT);\n                break;\n        }\n        return super.once(event, callback);\n    }\n    /**\n     * Ask the bindings to listen for an event, it is recommend to use `.once()` for easy use\n     * @param {EVENTS} eventFlag polls for an event or group of events based upon a flag.\n     */\n    poll(eventFlag = 0) {\n        if (eventFlag & exports.EVENTS.UV_READABLE) {\n            logger('Polling for \"readable\"');\n        }\n        if (eventFlag & exports.EVENTS.UV_WRITABLE) {\n            logger('Polling for \"writable\"');\n        }\n        if (eventFlag & exports.EVENTS.UV_DISCONNECT) {\n            logger('Polling for \"disconnect\"');\n        }\n        this.poller.poll(eventFlag);\n    }\n    /**\n     * Stop listening for events and cancel all outstanding listening with an error\n     */\n    stop() {\n        logger('Stopping poller');\n        this.poller.stop();\n        this.emitCanceled();\n    }\n    destroy() {\n        logger('Destroying poller');\n        this.poller.destroy();\n        this.emitCanceled();\n    }\n    emitCanceled() {\n        const err = new errors_1.BindingsError('Canceled', { canceled: true });\n        this.emit('readable', err);\n        this.emit('writable', err);\n        this.emit('disconnect', err);\n    }\n}\nexports.Poller = Poller;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}