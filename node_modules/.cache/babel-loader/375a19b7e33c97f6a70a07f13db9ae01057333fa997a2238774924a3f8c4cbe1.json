{"ast":null,"code":"var Emitter = require('extended-emitter');\nvar arrays = require('async-arrays');\nvar drivers = {};\nvar listers = {};\nswitch (process.platform) {\n  case 'darwin':\n    if (!drivers.HID) drivers.HID = require('node-hid');\n    if (!listers.HID) listers.HID = function (cb) {\n      //console.log('***', drivers.HID.devices())\n      var devices = drivers.HID.devices().filter(function (device) {\n        var isApple = device.product && device.product.indexOf('Apple ') !== -1;\n        var isMikeyDriver = device.product === 'Apple Mikey HID Driver';\n        return !(isMikeyDriver || isApple || device.product === 'Keyboard Backlight');\n      });\n      if (cb) cb(devices);\n    };\n    if (!drivers.serial) drivers.serial = {\n      SerialPort: require('serialport')\n    };\n    if (!listers.serial) listers.serial = function (cb) {\n      drivers.serial.SerialPort.list().then(function (ports) {\n        //*\n        ports = ports.filter(function (device) {\n          var result = device.path === '/dev/cu.Bluetooth-Incoming-Port';\n          return result;\n        }); // */\n        cb(ports);\n      }).catch(function (err) {});\n    };\n    var SerialPort = drivers.serial.SerialPort;\n    break;\n  case 'linux':\n    if (!drivers.HID) drivers.HID = require('node-hid');\n    if (!listers.HID) listers.HID = function (cb) {\n      var devices = drivers.HID.devices();\n      if (cb) cb(devices);\n    };\n    if (!drivers.serial) drivers.serial = {\n      SerialPort: require('serialport')\n    };\n    if (!listers.serial) listers.serial = function (cb) {\n      drivers.serial.SerialPort.list().then(function (ports) {\n        /*\n        ports = ports.filter(function(device){\n            var result = device.path !== '/dev/cu.Bluetooth-Incoming-Port';\n            return result;\n        }); // */\n        cb(ports);\n      }).catch(function (err) {});\n    };\n    var SerialPort = drivers.serial.SerialPort;\n    break;\n  default:\n    throw new Error('Unsupported platform: ' + process.platform);\n}\nmodule.exports.listen = function (device, handler) {\n  if (!!device.serial) {\n    var serialDevice = new drivers.serial.SerialPort(device.serial);\n    serialDevice.on('data', function (data) {\n      handler(data.toString().trim());\n    });\n    return;\n  } else {\n    if (device.vendor && device.product) {\n      var HIDDevice = new drivers.HID.HID(device.vendor, device.product);\n      HIDDevice.on('data', function (data) {\n        handler(data.toString());\n      });\n    } else {\n      var HIDDevice = new drivers.HID.HID(device.hid || device.path);\n      HIDDevice.on('data', function (data) {\n        handler(data.toString());\n      });\n    }\n  }\n};\nmodule.exports.devices = function (type, callback) {\n  if (typeof type == 'function' && !callback) {\n    callback = type;\n    var results = {};\n    arrays.forEachEmission(Object.keys(drivers), function (key, index, done) {\n      listers[key](function (list) {\n        results[key] = list;\n        done();\n      });\n    }, function () {\n      callback(results);\n    });\n  } else {\n    listers[type](function (list) {\n      callback(list);\n    });\n  }\n};","map":{"version":3,"names":["Emitter","require","arrays","drivers","listers","process","platform","HID","cb","devices","filter","device","isApple","product","indexOf","isMikeyDriver","serial","SerialPort","list","then","ports","result","path","catch","err","Error","module","exports","listen","handler","serialDevice","on","data","toString","trim","vendor","HIDDevice","hid","type","callback","results","forEachEmission","Object","keys","key","index","done"],"sources":["/Users/parkerhuang/Desktop/projects/books/node_modules/barcode-scanner/barcode-scanner.js"],"sourcesContent":["\nvar Emitter = require('extended-emitter');\nvar arrays = require('async-arrays');\n\nvar drivers = {};\nvar listers = {};\n\nswitch(process.platform){\n    case 'darwin':\n        if(!drivers.HID) drivers.HID = require('node-hid');\n        if(!listers.HID) listers.HID = function(cb){\n            //console.log('***', drivers.HID.devices())\n            var devices = drivers.HID.devices().filter(function(device){\n                    var isApple = device.product &&\n                        (device.product.indexOf('Apple ') !== -1);\n                    var isMikeyDriver = device.product === 'Apple Mikey HID Driver';\n                return !(isMikeyDriver || isApple || device.product === 'Keyboard Backlight');\n            });\n            if(cb) cb(devices);\n        };\n        if(!drivers.serial) drivers.serial = {SerialPort:require('serialport')};\n        if(!listers.serial) listers.serial = function(cb){\n            drivers.serial.SerialPort.list().then(function(ports){\n                //*\n                ports = ports.filter(function(device){\n                    var result = device.path === '/dev/cu.Bluetooth-Incoming-Port';\n                    return result;\n                }); // */\n                cb(ports);\n            }).catch(function(err){\n\n            });\n        }\n        var SerialPort = drivers.serial.SerialPort;\n        break;\n    case 'linux':\n        if(!drivers.HID) drivers.HID = require('node-hid');\n        if(!listers.HID) listers.HID = function(cb){\n            var devices = drivers.HID.devices();\n            if(cb) cb(devices);\n        };\n        if(!drivers.serial) drivers.serial = {SerialPort:require('serialport')};\n        if(!listers.serial) listers.serial = function(cb){\n            drivers.serial.SerialPort.list().then(function(ports){\n                /*\n                ports = ports.filter(function(device){\n                    var result = device.path !== '/dev/cu.Bluetooth-Incoming-Port';\n                    return result;\n                }); // */\n                cb(ports);\n            }).catch(function(err){\n\n            });\n        }\n        var SerialPort = drivers.serial.SerialPort;\n        break;\n    default : throw new Error('Unsupported platform: '+process.platform);\n}\n\nmodule.exports.listen = function(device, handler){\n    if(!!device.serial){\n        var serialDevice = new drivers.serial.SerialPort(device.serial);\n        serialDevice.on('data', function(data){\n            handler(data.toString().trim());\n        });\n        return;\n    }else{\n        if(device.vendor && device.product){\n            var HIDDevice = new drivers.HID.HID(device.vendor, device.product);\n            HIDDevice.on('data', function(data){\n                handler(data.toString());\n            });\n        }else{\n            var HIDDevice = new drivers.HID.HID(device.hid || device.path);\n            HIDDevice.on('data', function(data){\n                handler(data.toString());\n            });\n        }\n    }\n}\n\nmodule.exports.devices = function(type, callback){\n    if(typeof type == 'function' && !callback){\n        callback = type;\n        var results = {};\n        arrays.forEachEmission(Object.keys(drivers), function(key, index, done){\n            listers[key](function(list){\n                results[key] = list;\n                done();\n            });\n        }, function(){\n            callback(results);\n        })\n    }else{\n        listers[type](function(list){\n            callback(list);\n        });\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}